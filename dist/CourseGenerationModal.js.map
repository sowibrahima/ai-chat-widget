{"version":3,"file":"CourseGenerationModal.js","names":["_react","_interopRequireWildcard","require","_hooks","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_extends","assign","bind","arguments","length","apply","IconClose","_ref","size","props","createElement","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","IconSpinner","_ref2","className","style","marginRight","cx","cy","opacity","d","IconFile","_ref3","verticalAlign","IconWand","_ref4","CourseGenerationModal","_ref5","isOpen","onClose","onSuccess","onError","title","maxFileSizeMB","courseId","uploadFile","createGenerationJob","getJobStatus","isLoading","error","hookError","useCourseGeneration","file","setFile","useState","inputType","setInputType","sourceUrl","setSourceUrl","sourceText","setSourceText","instructions","setInstructions","isGenerating","setIsGenerating","setError","currentJob","setCurrentJob","jobProgress","setJobProgress","jobStatus","setJobStatus","progressMessage","setProgressMessage","handleFileChange","selectedFile","target","files","allowedExts","nameLower","name","toLowerCase","ext","substring","lastIndexOf","includes","join","fileSizeMB","toFixed","useEffect","pollJob","jobData","id","progress_percent","status","progress_message","handleClose","error_message","Error","err","console","interval","setInterval","clearInterval","handleGenerate","trim","jobPayload","course_id","job_type","input_type","uploadResult","file_path","pdf_file","source_url","source_text","message","type","onClick","disabled","role","htmlFor","accept","onChange","value","placeholder","rows","maxLength","Fragment"],"sources":["../src/CourseGenerationModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useCourseGeneration } from './data/hooks';\nimport './AIChatWidget.css';\n\n// Minimal SVG icons\nconst IconClose = ({ size = 18, ...props }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" aria-hidden=\"true\" {...props}>\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\nconst IconSpinner = ({ size = 16, ...props }) => (\n  <svg className=\"spinner\" width={size} height={size} viewBox=\"0 0 24 24\" aria-hidden=\"true\" style={{ marginRight: 8 }} {...props}>\n    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"3\" fill=\"none\" opacity=\"0.2\" />\n    <path d=\"M22 12a10 10 0 0 1-10 10\" stroke=\"currentColor\" strokeWidth=\"3\" fill=\"none\" />\n  </svg>\n);\nconst IconFile = ({ size = 16, ...props }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" aria-hidden=\"true\" style={{ marginRight: 6, verticalAlign: 'text-bottom' }} {...props}>\n    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" />\n    <path d=\"M14 2v6h6\" />\n  </svg>\n);\nconst IconWand = ({ size = 16, ...props }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.6\" strokeLinecap=\"round\" strokeLinejoin=\"round\" aria-hidden=\"true\" style={{ marginRight: 8 }} {...props}>\n    <path d=\"M15 4l-1 3 3-1\" />\n    <path d=\"M6 20l8-8\" />\n    <path d=\"M4 15l3 1-1 3\" />\n    <path d=\"M18 10l2 2\" />\n  </svg>\n);\n\n/**\n * CourseGenerationModal\n * - Modal component for AI course generation from PDF\n * - Handles file upload and instruction input\n * - Can be used standalone or integrated into other components\n */\nexport default function CourseGenerationModal({\n  isOpen = false,\n  onClose = () => {},\n  onSuccess = () => {},\n  onError = () => {},\n  title = \"AI Course Generation\",\n  maxFileSizeMB = 50,\n  courseId = null\n}) {\n  const { uploadFile, createGenerationJob, getJobStatus, isLoading, error: hookError } = useCourseGeneration();\n  const [file, setFile] = useState(null);\n  const [inputType, setInputType] = useState('file'); // 'file' | 'url' | 'text'\n  const [sourceUrl, setSourceUrl] = useState('');\n  const [sourceText, setSourceText] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState('');\n  const [currentJob, setCurrentJob] = useState(null);\n  const [jobProgress, setJobProgress] = useState(0);\n  const [jobStatus, setJobStatus] = useState('');\n  const [progressMessage, setProgressMessage] = useState('');\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setError('');\n    \n    if (!selectedFile) {\n      setFile(null);\n      return;\n    }\n\n    // Validate file type by extension to allow multiple formats\n    const allowedExts = ['.pdf', '.docx', '.pptx', '.txt', '.md', '.rtf', '.png', '.jpg', '.jpeg', '.gif'];\n    const nameLower = selectedFile.name.toLowerCase();\n    const ext = nameLower.substring(nameLower.lastIndexOf('.'));\n    if (!allowedExts.includes(ext)) {\n      setError(`Unsupported file type: ${ext}. Allowed: ${allowedExts.join(', ')}`);\n      setFile(null);\n      return;\n    }\n\n    // Validate file size\n    const fileSizeMB = selectedFile.size / (1024 * 1024);\n    if (fileSizeMB > maxFileSizeMB) {\n      setError(`File size must be less than ${maxFileSizeMB}MB. Current size: ${fileSizeMB.toFixed(1)}MB`);\n      setFile(null);\n      return;\n    }\n\n    setFile(selectedFile);\n  };\n\n  // Job polling effect\n  useEffect(() => {\n    if (!currentJob) return;\n\n    const pollJob = async () => {\n      try {\n        const jobData = await getJobStatus(currentJob.id);\n        setJobProgress(jobData.progress_percent || 0);\n        setJobStatus(jobData.status);\n        setProgressMessage(jobData.progress_message || '');\n\n        if (jobData.status === 'completed') {\n          setCurrentJob(null);\n          setIsGenerating(false);\n          onSuccess(jobData);\n          handleClose();\n        } else if (jobData.status === 'failed') {\n          setCurrentJob(null);\n          setIsGenerating(false);\n          setError(jobData.error_message || 'Course generation failed');\n          onError(new Error(jobData.error_message));\n        }\n      } catch (err) {\n        console.error('Error polling job:', err);\n      }\n    };\n\n    const interval = setInterval(pollJob, 2000); // Poll every 2 seconds\n    return () => clearInterval(interval);\n  }, [currentJob, getJobStatus, onSuccess, onError]);\n\n  const handleGenerate = async () => {\n    // Basic validation by input type\n    if (!instructions.trim()) {\n      setError('Please provide instructions.');\n      return;\n    }\n\n    if (inputType === 'file' && !file) {\n      setError('Please select a file.');\n      return;\n    }\n    if (inputType === 'url' && !sourceUrl.trim()) {\n      setError('Please provide a source URL.');\n      return;\n    }\n    if (inputType === 'text' && !sourceText.trim()) {\n      setError('Please provide some text content.');\n      return;\n    }\n\n    if (!courseId) {\n      setError('Course ID is required for content generation.');\n      return;\n    }\n\n    setIsGenerating(true);\n    setError('');\n    setJobProgress(0);\n    setJobStatus('starting');\n\n    try {\n      let jobPayload = {\n        course_id: courseId,\n        job_type: 'course_generation',\n        instructions: instructions.trim(),\n        input_type: inputType,\n      };\n\n      if (inputType === 'file') {\n        // Upload the file first\n        const uploadResult = await uploadFile(file);\n        jobPayload.file_path = uploadResult.file_path;\n        jobPayload.pdf_file = uploadResult.file_path; // back-compat\n      } else if (inputType === 'url') {\n        jobPayload.source_url = sourceUrl.trim();\n      } else if (inputType === 'text') {\n        jobPayload.source_text = sourceText.trim();\n      }\n\n      // Then create the generation job\n      const jobData = await createGenerationJob(jobPayload);\n\n      setCurrentJob(jobData);\n      setJobStatus('processing');\n    } catch (err) {\n      setError(err.message || 'Failed to start course generation. Please try again.');\n      setIsGenerating(false);\n      onError(err);\n    }\n  };\n\n  const handleClose = () => {\n    if (!isGenerating) {\n      setFile(null);\n      setInstructions('');\n      setError('');\n      onClose();\n    }\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"course-generation-modal-overlay\">\n      <div className=\"course-generation-modal\">\n        <div className=\"course-generation-modal-header\">\n          <h4 className=\"course-generation-modal-title\">{title}</h4>\n          <button\n            type=\"button\"\n            className=\"course-generation-modal-close\"\n            onClick={handleClose}\n            disabled={isGenerating}\n            aria-label=\"Close modal\"\n          >\n            <IconClose />\n          </button>\n        </div>\n\n        <div className=\"course-generation-modal-body\">\n          <p className=\"course-generation-modal-description\">\n            Provide a source and instructions to generate comprehensive Open edX course content using AI. Supported inputs: PDF, Word (.docx), PowerPoint (.pptx), plaintext (.txt/.md/.rtf), images (.png/.jpg/.jpeg/.gif), or a web page URL.\n          </p>\n\n          {error && (\n            <div className=\"course-generation-modal-error\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"course-generation-form\">\n            {/* Input type selector */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Source Type:</label>\n              <div className=\"btn-group\" role=\"group\" aria-label=\"Source type\">\n                <button type=\"button\" className={`btn ${inputType==='file' ? 'btn-primary' : 'btn-outline'}`} onClick={() => setInputType('file')} disabled={isGenerating}>File</button>\n                <button type=\"button\" className={`btn ${inputType==='url' ? 'btn-primary' : 'btn-outline'}`} onClick={() => setInputType('url')} disabled={isGenerating}>URL</button>\n                <button type=\"button\" className={`btn ${inputType==='text' ? 'btn-primary' : 'btn-outline'}`} onClick={() => setInputType('text')} disabled={isGenerating}>Text</button>\n              </div>\n            </div>\n            {inputType === 'file' && (\n              <div className=\"form-group\">\n                <label htmlFor=\"source-upload\" className=\"form-label\">\n                  Upload File (max {maxFileSizeMB}MB):\n                </label>\n                <input\n                  id=\"source-upload\"\n                  type=\"file\"\n                  className=\"form-control\"\n                  accept=\".pdf,.docx,.pptx,.txt,.md,.rtf,.png,.jpg,.jpeg,.gif\"\n                  onChange={handleFileChange}\n                  disabled={isGenerating}\n                />\n                {file && (\n                  <div className=\"file-info\">\n                    <span className=\"file-name\"><IconFile />{file.name}</span>\n                    <span className=\"file-size\">({(file.size / (1024 * 1024)).toFixed(1)}MB)</span>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {inputType === 'url' && (\n              <div className=\"form-group\">\n                <label htmlFor=\"source-url\" className=\"form-label\">Web Page URL:</label>\n                <input\n                  id=\"source-url\"\n                  type=\"url\"\n                  className=\"form-control\"\n                  value={sourceUrl}\n                  onChange={(e) => setSourceUrl(e.target.value)}\n                  placeholder=\"https://example.com/article\"\n                  disabled={isGenerating}\n                />\n              </div>\n            )}\n\n            {inputType === 'text' && (\n              <div className=\"form-group\">\n                <label htmlFor=\"source-text\" className=\"form-label\">Paste Text:</label>\n                <textarea\n                  id=\"source-text\"\n                  className=\"form-control\"\n                  rows=\"6\"\n                  value={sourceText}\n                  onChange={(e) => setSourceText(e.target.value)}\n                  placeholder=\"Paste your source text here...\"\n                  disabled={isGenerating}\n                />\n              </div>\n            )}\n\n            \n\n            <div className=\"form-group\">\n              <label htmlFor=\"instructions\" className=\"form-label\">\n                Generation Instructions:\n              </label>\n              <textarea\n                id=\"instructions\"\n                className=\"form-control\"\n                rows=\"4\"\n                value={instructions}\n                onChange={(e) => setInstructions(e.target.value)}\n                placeholder=\"Describe what kind of course content you want to generate. For example: 'Create a comprehensive course with modules, lessons, quizzes, and assignments based on this document. Focus on practical applications and include interactive elements.'\"\n                disabled={isGenerating}\n                maxLength={1000}\n              />\n              <div className=\"character-count\">\n                {instructions.length}/1000 characters\n              </div>\n            </div>\n\n            {isGenerating && currentJob && (\n              <div className=\"form-group\">\n                <label className=\"form-label\">Generation Progress:</label>\n                <div className=\"progress-container\">\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-fill\" \n                      style={{ width: `${jobProgress}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"progress-text\">\n                    {jobProgress}% - {jobStatus}{progressMessage ? ` — ${progressMessage}` : ''}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"course-generation-modal-footer\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={handleClose}\n            disabled={isGenerating}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleGenerate}\n            disabled={\n              isGenerating ||\n              !instructions.trim() ||\n              (inputType === 'file' && !file) ||\n              (inputType === 'url' && !sourceUrl.trim()) ||\n              (inputType === 'text' && !sourceText.trim())\n            }\n          >\n            {isGenerating ? (\n              <>\n                <IconSpinner />Generating...\n              </>\n            ) : (\n              <>\n                <IconWand />Generate Course\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]}