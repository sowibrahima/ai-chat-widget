{"version":3,"file":"hooks.js","names":["_react","require","_auth","getCourseIdFromUrl","path","window","location","pathname","includes","match","exports","getBlockIdFromContext","urlParams","URLSearchParams","search","blockId","get","blockMatch","unitElement","document","querySelector","getAttribute","blockElement","buildApiUrl","baseUrl","courseId","cleanBaseUrl","replace","encodeURIComponent","useAIChatData","chatAppData","setChatAppData","useState","showAIChat","apiUrl","title","placeholder","disabled","useEffect","config","aiChatConfig","baseApiUrl","dynamicApiUrl","prevData","useAIChat","sessionId","arguments","length","undefined","isLoading","setIsLoading","error","setError","currentSessionId","setCurrentSessionId","sendMessage","message","payload","session_id","client","getAuthenticatedHttpClient","response","post","data","err","fetch","method","headers","value","credentials","body","JSON","stringify","ok","Error","status","result","json","fetchErr","sendMessageStream","onChunk","streamUrl","console","log","entries","reader","getReader","decoder","TextDecoder","buffer","fullResponse","done","read","decode","stream","lines","split","pop","line","startsWith","slice","chunk","parse","content","choices","delta","e","warn","useCourseGeneration","uploadFile","file","formData","FormData","append","errorMessage","createGenerationJob","jobData","course_id","job_type","instructions","pdf_file","model_config","getJobStatus","jobId","listJobs","url","generateCourse"],"sources":["../../src/data/hooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\n\n/**\n * Extract course_id from current page URL using Open edX patterns\n */\nconst getCourseIdFromUrl = () => {\n  const path = window.location.pathname;\n  \n  // Pattern: /courses/course-v1:org+course+run/...\n  if (path.includes('/courses/')) {\n    const match = path.match(/\\/courses\\/([^/]+)/);\n    if (match && match[1] && match[1].includes('course-v1:')) {\n      return match[1];\n    }\n  }\n  \n  // Pattern: /course/course-v1:org+course+run/...\n  if (path.includes('/course/')) {\n    const match = path.match(/\\/course\\/([^/]+)/);\n    if (match && match[1] && match[1].includes('course-v1:')) {\n      return match[1];\n    }\n  }\n  \n  return null;\n};\n\n/**\n * Extract block_id from current page URL or DOM\n */\nconst getBlockIdFromContext = () => {\n  // Try to get from URL hash or query params first\n  const urlParams = new URLSearchParams(window.location.search);\n  const blockId = urlParams.get('block_id') || urlParams.get('unit_id');\n  if (blockId) return blockId;\n  \n  // Try to get from URL path\n  const path = window.location.pathname;\n  const blockMatch = path.match(/block-v1:[^/]+/);\n  if (blockMatch) return blockMatch[0];\n  \n  // Try to get from DOM data attributes (common in Open edX)\n  const unitElement = document.querySelector('[data-unit-id]');\n  if (unitElement) return unitElement.getAttribute('data-unit-id');\n  \n  const blockElement = document.querySelector('[data-block-id]');\n  if (blockElement) return blockElement.getAttribute('data-block-id');\n  \n  return null;\n};\n\n/**\n * Build dynamic API URL with course and block context\n */\nconst buildApiUrl = (baseUrl, courseId, blockId) => {\n  // Remove trailing slash from baseUrl\n  const cleanBaseUrl = baseUrl.replace(/\\/$/, '');\n  \n  if (courseId && blockId) {\n    return `${cleanBaseUrl}/${encodeURIComponent(courseId)}/${encodeURIComponent(blockId)}/`;\n  } else if (courseId) {\n    return `${cleanBaseUrl}/${encodeURIComponent(courseId)}/`;\n  }\n  \n  // Fallback to original URL if no context found\n  return baseUrl;\n};\n\n/**\n * Hook to manage AI chat application data and configuration\n */\nexport const useAIChatData = () => {\n  const [chatAppData, setChatAppData] = useState({\n    showAIChat: true,\n    apiUrl: '/api/ai-assistant/chat',\n    title: 'AI Assistant',\n    placeholder: 'Ask me anything...',\n    disabled: false,\n  });\n\n  useEffect(() => {\n    // Initialize chat configuration from global config or environment\n    const config = window.aiChatConfig || {};\n    \n    // Extract course and block context\n    const courseId = getCourseIdFromUrl();\n    const blockId = getBlockIdFromContext();\n    \n    // Build dynamic API URL with context\n    const baseApiUrl = config.apiUrl || '/api/ai-assistant/chat';\n    const dynamicApiUrl = buildApiUrl(baseApiUrl, courseId, blockId);\n    \n    setChatAppData(prevData => ({\n      ...prevData,\n      ...config,\n      apiUrl: dynamicApiUrl,\n      courseId,\n      blockId,\n    }));\n  }, []);\n\n  return { chatAppData };\n};\n\n/**\n * Hook to handle AI chat messaging with streaming support\n */\nexport const useAIChat = (apiUrl, sessionId = null) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentSessionId, setCurrentSessionId] = useState(sessionId);\n\n  const sendMessage = async (message) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const payload = { message };\n      if (currentSessionId) {\n        payload.session_id = currentSessionId;\n      }\n      \n      const client = getAuthenticatedHttpClient();\n      const response = await client.post(apiUrl, payload);\n      \n      // Extract session_id from response if available\n      if (response.data?.session_id && !currentSessionId) {\n        setCurrentSessionId(response.data.session_id);\n      }\n      \n      return response.data;\n    } catch (err) {\n      // Fallback to fetch for cross-origin issues or when authenticated client fails\n      try {\n        const payload = { message };\n        if (currentSessionId) {\n          payload.session_id = currentSessionId;\n        }\n        \n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: { \n            'Content-Type': 'application/json',\n            'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]')?.value || ''\n          },\n          credentials: 'include',\n          body: JSON.stringify(payload),\n        });\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}`);\n        }\n        \n        const result = await response.json();\n        \n        // Extract session_id from response if available\n        if (result?.session_id && !currentSessionId) {\n          setCurrentSessionId(result.session_id);\n        }\n        \n        return result;\n      } catch (fetchErr) {\n        setError(fetchErr.message);\n        throw fetchErr;\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const sendMessageStream = async (message, onChunk) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const payload = { message };\n      if (currentSessionId) {\n        payload.session_id = currentSessionId;\n      }\n      \n      // Use streaming endpoint - handle both URL formats\n      let streamUrl;\n      if (apiUrl.includes('/chat/') && !apiUrl.includes('/stream')) {\n        // Handle both course-only and course+block URLs\n        if (apiUrl.match(/\\/chat\\/[^/]+\\/[^/]+\\/$/)) {\n          // Format: /chat/course-id/block-id/ -> /chat/course-id/block-id/stream/\n          streamUrl = apiUrl.replace(/\\/chat\\/([^/]+\\/[^/]+)\\/$/, '/chat/$1/stream/');\n        } else {\n          // Format: /chat/course-id/ -> /chat/course-id/stream/\n          streamUrl = apiUrl.replace(/\\/chat\\/([^/]+)\\/$/, '/chat/$1/stream/');\n        }\n      } else {\n        // Fallback for legacy format\n        streamUrl = apiUrl.replace('/chat', '/chat/stream');\n      }\n      \n      // Debug the URL being called\n      console.log('Streaming URL:', streamUrl);\n      console.log('Payload:', payload);\n      \n      const response = await fetch(streamUrl, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'text/event-stream',\n          'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]')?.value || ''\n        },\n        credentials: 'include',\n        body: JSON.stringify(payload),\n      });\n      \n      console.log('Response status:', response.status);\n      console.log('Response headers:', [...response.headers.entries()]);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      \n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = '';\n      let fullResponse = '';\n      \n      while (true) {\n        const { done, value } = await reader.read();\n        \n        if (done) break;\n        \n        buffer += decoder.decode(value, { stream: true });\n        const lines = buffer.split('\\n');\n        buffer = lines.pop(); // Keep incomplete line in buffer\n        \n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            const data = line.slice(6);\n            \n            if (data === '[DONE]') {\n              return fullResponse;\n            }\n            \n            try {\n              const chunk = JSON.parse(data);\n              \n              // Handle OpenAI-style streaming format\n              const content = chunk.choices?.[0]?.delta?.content;\n              if (content) {\n                fullResponse += content;\n                onChunk(content);\n                continue;\n              }\n              \n              // Handle simple message format\n              if (chunk.message) {\n                fullResponse += chunk.message;\n                onChunk(chunk.message);\n                continue;\n              }\n              \n              // Handle direct text content\n              if (typeof chunk === 'string') {\n                fullResponse += chunk;\n                onChunk(chunk);\n              }\n            } catch (e) {\n              // Skip invalid JSON chunks\n              console.warn('Invalid chunk JSON:', data);\n            }\n          }\n        }\n      }\n      \n      return fullResponse;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { sendMessage, sendMessageStream, isLoading, error, sessionId: currentSessionId };\n};\n\n/**\n * Hook for course generation functionality\n */\nexport const useCourseGeneration = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const uploadFile = async (file) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      const client = getAuthenticatedHttpClient();\n      const response = await client.post('/api/ai-assistant/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      \n      return response.data;\n    } catch (err) {\n      const errorMessage = err.response?.data?.error || 'Failed to upload file';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const createGenerationJob = async (jobData) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const client = getAuthenticatedHttpClient();\n      const response = await client.post(`/api/ai-assistant/generate/${jobData.course_id}/`, {\n        job_type: jobData.job_type,\n        instructions: jobData.instructions,\n        pdf_file: jobData.pdf_file,\n        model_config: jobData.model_config,\n      });\n      \n      return response.data;\n    } catch (err) {\n      const errorMessage = err.response?.data?.error || 'Failed to create generation job';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getJobStatus = async (jobId) => {\n    try {\n      const client = getAuthenticatedHttpClient();\n      const response = await client.get(`/api/ai-assistant/jobs/${jobId}/`);\n      return response.data;\n    } catch (err) {\n      const errorMessage = err.response?.data?.error || 'Failed to get job status';\n      throw new Error(errorMessage);\n    }\n  };\n\n  const listJobs = async (courseId = null) => {\n    try {\n      const client = getAuthenticatedHttpClient();\n      const url = courseId \n        ? `/api/ai-assistant/jobs/?course_id=${courseId}`\n        : '/api/ai-assistant/jobs/';\n      const response = await client.get(url);\n      return response.data;\n    } catch (err) {\n      const errorMessage = err.response?.data?.error || 'Failed to list jobs';\n      throw new Error(errorMessage);\n    }\n  };\n\n  // Legacy method for backward compatibility\n  const generateCourse = async (courseId, formData) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const client = getAuthenticatedHttpClient();\n      const apiUrl = `/api/ai-assistant/generate/${encodeURIComponent(courseId)}/`;\n      const response = await client.post(apiUrl, formData);\n      return response.data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  return { \n    uploadFile,\n    createGenerationJob,\n    getJobStatus,\n    listJobs,\n    generateCourse, // Legacy support\n    isLoading, \n    error \n  };\n};\n\n// Export utility functions for external use\nexport { getCourseIdFromUrl, getBlockIdFromContext, buildApiUrl };\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;;EAErC;EACA,IAAIH,IAAI,CAACI,QAAQ,CAAC,WAAW,CAAC,EAAE;IAC9B,MAAMC,KAAK,GAAGL,IAAI,CAACK,KAAK,CAAC,oBAAoB,CAAC;IAC9C,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,YAAY,CAAC,EAAE;MACxD,OAAOC,KAAK,CAAC,CAAC,CAAC;IACjB;EACF;;EAEA;EACA,IAAIL,IAAI,CAACI,QAAQ,CAAC,UAAU,CAAC,EAAE;IAC7B,MAAMC,KAAK,GAAGL,IAAI,CAACK,KAAK,CAAC,mBAAmB,CAAC;IAC7C,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,YAAY,CAAC,EAAE;MACxD,OAAOC,KAAK,CAAC,CAAC,CAAC;IACjB;EACF;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AAFAC,OAAA,CAAAP,kBAAA,GAAAA,kBAAA;AAGA,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;EAClC;EACA,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACR,MAAM,CAACC,QAAQ,CAACQ,MAAM,CAAC;EAC7D,MAAMC,OAAO,GAAGH,SAAS,CAACI,GAAG,CAAC,UAAU,CAAC,IAAIJ,SAAS,CAACI,GAAG,CAAC,SAAS,CAAC;EACrE,IAAID,OAAO,EAAE,OAAOA,OAAO;;EAE3B;EACA,MAAMX,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EACrC,MAAMU,UAAU,GAAGb,IAAI,CAACK,KAAK,CAAC,gBAAgB,CAAC;EAC/C,IAAIQ,UAAU,EAAE,OAAOA,UAAU,CAAC,CAAC,CAAC;;EAEpC;EACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;EAC5D,IAAIF,WAAW,EAAE,OAAOA,WAAW,CAACG,YAAY,CAAC,cAAc,CAAC;EAEhE,MAAMC,YAAY,GAAGH,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;EAC9D,IAAIE,YAAY,EAAE,OAAOA,YAAY,CAACD,YAAY,CAAC,eAAe,CAAC;EAEnE,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AAFAX,OAAA,CAAAC,qBAAA,GAAAA,qBAAA;AAGA,MAAMY,WAAW,GAAGA,CAACC,OAAO,EAAEC,QAAQ,EAAEV,OAAO,KAAK;EAClD;EACA,MAAMW,YAAY,GAAGF,OAAO,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAE/C,IAAIF,QAAQ,IAAIV,OAAO,EAAE;IACvB,OAAO,GAAGW,YAAY,IAAIE,kBAAkB,CAACH,QAAQ,CAAC,IAAIG,kBAAkB,CAACb,OAAO,CAAC,GAAG;EAC1F,CAAC,MAAM,IAAIU,QAAQ,EAAE;IACnB,OAAO,GAAGC,YAAY,IAAIE,kBAAkB,CAACH,QAAQ,CAAC,GAAG;EAC3D;;EAEA;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AACA;AACA;AAFAd,OAAA,CAAAa,WAAA,GAAAA,WAAA;AAGO,MAAMM,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG,IAAAC,eAAQ,EAAC;IAC7CC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,wBAAwB;IAChCC,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE,oBAAoB;IACjCC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAAC,gBAAS,EAAC,MAAM;IACd;IACA,MAAMC,MAAM,GAAGlC,MAAM,CAACmC,YAAY,IAAI,CAAC,CAAC;;IAExC;IACA,MAAMf,QAAQ,GAAGtB,kBAAkB,CAAC,CAAC;IACrC,MAAMY,OAAO,GAAGJ,qBAAqB,CAAC,CAAC;;IAEvC;IACA,MAAM8B,UAAU,GAAGF,MAAM,CAACL,MAAM,IAAI,wBAAwB;IAC5D,MAAMQ,aAAa,GAAGnB,WAAW,CAACkB,UAAU,EAAEhB,QAAQ,EAAEV,OAAO,CAAC;IAEhEgB,cAAc,CAACY,QAAQ,KAAK;MAC1B,GAAGA,QAAQ;MACX,GAAGJ,MAAM;MACTL,MAAM,EAAEQ,aAAa;MACrBjB,QAAQ;MACRV;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEe;EAAY,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AAFApB,OAAA,CAAAmB,aAAA,GAAAA,aAAA;AAGO,MAAMe,SAAS,GAAG,SAAAA,CAACV,MAAM,EAAuB;EAAA,IAArBW,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAChD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAlB,eAAQ,EAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAG,IAAApB,eAAQ,EAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG,IAAAtB,eAAQ,EAACa,SAAS,CAAC;EAEnE,MAAMU,WAAW,GAAG,MAAOC,OAAO,IAAK;IACrCN,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMK,OAAO,GAAG;QAAED;MAAQ,CAAC;MAC3B,IAAIH,gBAAgB,EAAE;QACpBI,OAAO,CAACC,UAAU,GAAGL,gBAAgB;MACvC;MAEA,MAAMM,MAAM,GAAG,IAAAC,gCAA0B,EAAC,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC5B,MAAM,EAAEuB,OAAO,CAAC;;MAEnD;MACA,IAAII,QAAQ,CAACE,IAAI,EAAEL,UAAU,IAAI,CAACL,gBAAgB,EAAE;QAClDC,mBAAmB,CAACO,QAAQ,CAACE,IAAI,CAACL,UAAU,CAAC;MAC/C;MAEA,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ;MACA,IAAI;QACF,MAAMP,OAAO,GAAG;UAAED;QAAQ,CAAC;QAC3B,IAAIH,gBAAgB,EAAE;UACpBI,OAAO,CAACC,UAAU,GAAGL,gBAAgB;QACvC;QAEA,MAAMQ,QAAQ,GAAG,MAAMI,KAAK,CAAC/B,MAAM,EAAE;UACnCgC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,aAAa,EAAEhD,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC,EAAEgD,KAAK,IAAI;UAChF,CAAC;UACDC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,OAAO;QAC9B,CAAC,CAAC;QAEF,IAAI,CAACI,QAAQ,CAACY,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,QAAQb,QAAQ,CAACc,MAAM,EAAE,CAAC;QAC5C;QAEA,MAAMC,MAAM,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;;QAEpC;QACA,IAAID,MAAM,EAAElB,UAAU,IAAI,CAACL,gBAAgB,EAAE;UAC3CC,mBAAmB,CAACsB,MAAM,CAAClB,UAAU,CAAC;QACxC;QAEA,OAAOkB,MAAM;MACf,CAAC,CAAC,OAAOE,QAAQ,EAAE;QACjB1B,QAAQ,CAAC0B,QAAQ,CAACtB,OAAO,CAAC;QAC1B,MAAMsB,QAAQ;MAChB;IACF,CAAC,SAAS;MACR5B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM6B,iBAAiB,GAAG,MAAAA,CAAOvB,OAAO,EAAEwB,OAAO,KAAK;IACpD9B,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMK,OAAO,GAAG;QAAED;MAAQ,CAAC;MAC3B,IAAIH,gBAAgB,EAAE;QACpBI,OAAO,CAACC,UAAU,GAAGL,gBAAgB;MACvC;;MAEA;MACA,IAAI4B,SAAS;MACb,IAAI/C,MAAM,CAAC1B,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC0B,MAAM,CAAC1B,QAAQ,CAAC,SAAS,CAAC,EAAE;QAC5D;QACA,IAAI0B,MAAM,CAACzB,KAAK,CAAC,yBAAyB,CAAC,EAAE;UAC3C;UACAwE,SAAS,GAAG/C,MAAM,CAACP,OAAO,CAAC,2BAA2B,EAAE,kBAAkB,CAAC;QAC7E,CAAC,MAAM;UACL;UACAsD,SAAS,GAAG/C,MAAM,CAACP,OAAO,CAAC,oBAAoB,EAAE,kBAAkB,CAAC;QACtE;MACF,CAAC,MAAM;QACL;QACAsD,SAAS,GAAG/C,MAAM,CAACP,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC;MACrD;;MAEA;MACAuD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,SAAS,CAAC;MACxCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE1B,OAAO,CAAC;MAEhC,MAAMI,QAAQ,GAAG,MAAMI,KAAK,CAACgB,SAAS,EAAE;QACtCf,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE,mBAAmB;UAC7B,aAAa,EAAEhD,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC,EAAEgD,KAAK,IAAI;QAChF,CAAC;QACDC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,OAAO;MAC9B,CAAC,CAAC;MAEFyB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEtB,QAAQ,CAACc,MAAM,CAAC;MAChDO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,CAAC,GAAGtB,QAAQ,CAACM,OAAO,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC;MAEjE,IAAI,CAACvB,QAAQ,CAACY,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,QAAQb,QAAQ,CAACc,MAAM,EAAE,CAAC;MAC5C;MAEA,MAAMU,MAAM,GAAGxB,QAAQ,CAACS,IAAI,CAACgB,SAAS,CAAC,CAAC;MACxC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,CAAC;MACjC,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIC,YAAY,GAAG,EAAE;MAErB,OAAO,IAAI,EAAE;QACX,MAAM;UAAEC,IAAI;UAAEvB;QAAM,CAAC,GAAG,MAAMiB,MAAM,CAACO,IAAI,CAAC,CAAC;QAE3C,IAAID,IAAI,EAAE;QAEVF,MAAM,IAAIF,OAAO,CAACM,MAAM,CAACzB,KAAK,EAAE;UAAE0B,MAAM,EAAE;QAAK,CAAC,CAAC;QACjD,MAAMC,KAAK,GAAGN,MAAM,CAACO,KAAK,CAAC,IAAI,CAAC;QAChCP,MAAM,GAAGM,KAAK,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC;;QAEtB,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;UACxB,IAAIG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC7B,MAAMpC,IAAI,GAAGmC,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;YAE1B,IAAIrC,IAAI,KAAK,QAAQ,EAAE;cACrB,OAAO2B,YAAY;YACrB;YAEA,IAAI;cACF,MAAMW,KAAK,GAAG9B,IAAI,CAAC+B,KAAK,CAACvC,IAAI,CAAC;;cAE9B;cACA,MAAMwC,OAAO,GAAGF,KAAK,CAACG,OAAO,GAAG,CAAC,CAAC,EAAEC,KAAK,EAAEF,OAAO;cAClD,IAAIA,OAAO,EAAE;gBACXb,YAAY,IAAIa,OAAO;gBACvBvB,OAAO,CAACuB,OAAO,CAAC;gBAChB;cACF;;cAEA;cACA,IAAIF,KAAK,CAAC7C,OAAO,EAAE;gBACjBkC,YAAY,IAAIW,KAAK,CAAC7C,OAAO;gBAC7BwB,OAAO,CAACqB,KAAK,CAAC7C,OAAO,CAAC;gBACtB;cACF;;cAEA;cACA,IAAI,OAAO6C,KAAK,KAAK,QAAQ,EAAE;gBAC7BX,YAAY,IAAIW,KAAK;gBACrBrB,OAAO,CAACqB,KAAK,CAAC;cAChB;YACF,CAAC,CAAC,OAAOK,CAAC,EAAE;cACV;cACAxB,OAAO,CAACyB,IAAI,CAAC,qBAAqB,EAAE5C,IAAI,CAAC;YAC3C;UACF;QACF;MACF;MAEA,OAAO2B,YAAY;IACrB,CAAC,CAAC,OAAO1B,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACR,OAAO,CAAC;MACrB,MAAMQ,GAAG;IACX,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEK,WAAW;IAAEwB,iBAAiB;IAAE9B,SAAS;IAAEE,KAAK;IAAEN,SAAS,EAAEQ;EAAiB,CAAC;AAC1F,CAAC;;AAED;AACA;AACA;AAFA3C,OAAA,CAAAkC,SAAA,GAAAA,SAAA;AAGO,MAAMgE,mBAAmB,GAAGA,CAAA,KAAM;EACvC,MAAM,CAAC3D,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAlB,eAAQ,EAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAG,IAAApB,eAAQ,EAAC,IAAI,CAAC;EAExC,MAAM6E,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC5D,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAM2D,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAE7B,MAAMnD,MAAM,GAAG,IAAAC,gCAA0B,EAAC,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,2BAA2B,EAAEiD,QAAQ,EAAE;QACxE5C,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMkD,YAAY,GAAGlD,GAAG,CAACH,QAAQ,EAAEE,IAAI,EAAEZ,KAAK,IAAI,uBAAuB;MACzEC,QAAQ,CAAC8D,YAAY,CAAC;MACtB,MAAM,IAAIxC,KAAK,CAACwC,YAAY,CAAC;IAC/B,CAAC,SAAS;MACRhE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMiE,mBAAmB,GAAG,MAAOC,OAAO,IAAK;IAC7ClE,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,MAAM,GAAG,IAAAC,gCAA0B,EAAC,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,8BAA8BsD,OAAO,CAACC,SAAS,GAAG,EAAE;QACrFC,QAAQ,EAAEF,OAAO,CAACE,QAAQ;QAC1BC,YAAY,EAAEH,OAAO,CAACG,YAAY;QAClCC,QAAQ,EAAEJ,OAAO,CAACI,QAAQ;QAC1BC,YAAY,EAAEL,OAAO,CAACK;MACxB,CAAC,CAAC;MAEF,OAAO5D,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMkD,YAAY,GAAGlD,GAAG,CAACH,QAAQ,EAAEE,IAAI,EAAEZ,KAAK,IAAI,iCAAiC;MACnFC,QAAQ,CAAC8D,YAAY,CAAC;MACtB,MAAM,IAAIxC,KAAK,CAACwC,YAAY,CAAC;IAC/B,CAAC,SAAS;MACRhE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMwE,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI;MACF,MAAMhE,MAAM,GAAG,IAAAC,gCAA0B,EAAC,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAAC3C,GAAG,CAAC,0BAA0B2G,KAAK,GAAG,CAAC;MACrE,OAAO9D,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMkD,YAAY,GAAGlD,GAAG,CAACH,QAAQ,EAAEE,IAAI,EAAEZ,KAAK,IAAI,0BAA0B;MAC5E,MAAM,IAAIuB,KAAK,CAACwC,YAAY,CAAC;IAC/B;EACF,CAAC;EAED,MAAMU,QAAQ,GAAG,eAAAA,CAAA,EAA2B;IAAA,IAApBnG,QAAQ,GAAAqB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IACrC,IAAI;MACF,MAAMa,MAAM,GAAG,IAAAC,gCAA0B,EAAC,CAAC;MAC3C,MAAMiE,GAAG,GAAGpG,QAAQ,GAChB,qCAAqCA,QAAQ,EAAE,GAC/C,yBAAyB;MAC7B,MAAMoC,QAAQ,GAAG,MAAMF,MAAM,CAAC3C,GAAG,CAAC6G,GAAG,CAAC;MACtC,OAAOhE,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMkD,YAAY,GAAGlD,GAAG,CAACH,QAAQ,EAAEE,IAAI,EAAEZ,KAAK,IAAI,qBAAqB;MACvE,MAAM,IAAIuB,KAAK,CAACwC,YAAY,CAAC;IAC/B;EACF,CAAC;;EAED;EACA,MAAMY,cAAc,GAAG,MAAAA,CAAOrG,QAAQ,EAAEsF,QAAQ,KAAK;IACnD7D,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,MAAM,GAAG,IAAAC,gCAA0B,EAAC,CAAC;MAC3C,MAAM1B,MAAM,GAAG,8BAA8BN,kBAAkB,CAACH,QAAQ,CAAC,GAAG;MAC5E,MAAMoC,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC5B,MAAM,EAAE6E,QAAQ,CAAC;MACpD,OAAOlD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,QAAQ,CAACY,GAAG,CAACR,OAAO,CAAC;MACrB,MAAMQ,GAAG;IACX,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IACL2D,UAAU;IACVM,mBAAmB;IACnBO,YAAY;IACZE,QAAQ;IACRE,cAAc;IAAE;IAChB7E,SAAS;IACTE;EACF,CAAC;AACH,CAAC;;AAED;AAAAzC,OAAA,CAAAkG,mBAAA,GAAAA,mBAAA","ignoreList":[]}