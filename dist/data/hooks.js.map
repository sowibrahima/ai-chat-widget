{"version":3,"file":"hooks.js","names":["_react","require","useAIChatData","chatAppData","setChatAppData","useState","showAIChat","apiUrl","title","placeholder","disabled","useEffect","config","window","aiChatConfig","prevData","exports","useAIChat","isLoading","setIsLoading","error","setError","sendMessage","message","response","fetch","method","headers","document","querySelector","value","credentials","body","JSON","stringify","ok","Error","status","result","json","err"],"sources":["../../src/data/hooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Hook to manage AI chat application data and configuration\n */\nexport const useAIChatData = () => {\n  const [chatAppData, setChatAppData] = useState({\n    showAIChat: true,\n    apiUrl: '/api/ai-assistant/chat',\n    title: 'AI Assistant',\n    placeholder: 'Ask me anything...',\n    disabled: false,\n  });\n\n  useEffect(() => {\n    // Initialize chat configuration from global config or environment\n    const config = window.aiChatConfig || {};\n    setChatAppData(prevData => ({\n      ...prevData,\n      ...config,\n    }));\n  }, []);\n\n  return { chatAppData };\n};\n\n/**\n * Hook to handle AI chat messaging\n */\nexport const useAIChat = (apiUrl) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendMessage = async (message) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]')?.value || ''\n        },\n        credentials: 'include',\n        body: JSON.stringify({ message }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      \n      const result = await response.json();\n      return result;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { sendMessage, isLoading, error };\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG,IAAAC,eAAQ,EAAC;IAC7CC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE,wBAAwB;IAChCC,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE,oBAAoB;IACjCC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAAC,gBAAS,EAAC,MAAM;IACd;IACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,YAAY,IAAI,CAAC,CAAC;IACxCV,cAAc,CAACW,QAAQ,KAAK;MAC1B,GAAGA,QAAQ;MACX,GAAGH;IACL,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAET;EAAY,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AAFAa,OAAA,CAAAd,aAAA,GAAAA,aAAA;AAGO,MAAMe,SAAS,GAAIV,MAAM,IAAK;EACnC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAd,eAAQ,EAAC,KAAK,CAAC;EACjD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAG,IAAAhB,eAAQ,EAAC,IAAI,CAAC;EAExC,MAAMiB,WAAW,GAAG,MAAOC,OAAO,IAAK;IACrCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAClB,MAAM,EAAE;QACnCmB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEC,QAAQ,CAACC,aAAa,CAAC,4BAA4B,CAAC,EAAEC,KAAK,IAAI;QAChF,CAAC;QACDC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAQ,CAAC;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,QAAQZ,QAAQ,CAACa,MAAM,EAAE,CAAC;MAC5C;MAEA,MAAMC,MAAM,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;MACpC,OAAOD,MAAM;IACf,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZnB,QAAQ,CAACmB,GAAG,CAACjB,OAAO,CAAC;MACrB,MAAMiB,GAAG;IACX,CAAC,SAAS;MACRrB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEG,WAAW;IAAEJ,SAAS;IAAEE;EAAM,CAAC;AAC1C,CAAC;AAACJ,OAAA,CAAAC,SAAA,GAAAA,SAAA","ignoreList":[]}